<?php
define (WARBAND_CREATE_NODE, 0);
define (WARBAND_ADD_UNIT, 1);
define (WARBAND_VIEW_WARBAND, 2);
define (WARBAND_FINISH, 3);

function warhammer_globals_theme() {
  return array(
    'render_playfield' => array('arguments' => array('field')),
  );
}

function warhammer_globals_menu() {
  $items['line'] = array(
    'title' => 'Lines',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'warhammer_globals_draw_line',
    'access arguments' => array('access content'),
  );

  $items['warband/add/%node'] = array(
    'title' => 'Add to warband',
    'type' => MENU_CALLBACK,
    'page callback' => 'warhammer_globals_add_warband',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );

  $items['warband/wizard/%'] = array(
    'title' => 'Create a warband',
    'type' => MENU_CALLBACK,
    'page callback' => 'warhammer_globals_warband_wizard',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
  );

  $items['mywarbands'] = array(
    'title' => 'My warbands',
    'type' => MENU_CALLBACK,
    'page callback' => 'warhammer_globals_mywarbands',
    'access arguments' => array('access content'),
  );

  return $items;
}

function warhammer_globals_allow_add() {
  global $user;
  if($user->uid > 0) {
    return TRUE;
  }
}

function warhammer_globals_add_warband($node, $warband_nid) {
  
  // Check if allowed number of unit exeeds currently owned.
  
  // clone the node for the current user.
  module_load_include('inc', 'clone', 'clone.pages');
  $new_nid = clone_node_save($node->nid);
      
  $node_warband = node_load($warband_nid);
  $node_warband->field_wuref[]['nid'] = $new_nid;
  node_save($node_warband);

  drupal_goto('warband/wizard/' . WARBAND_VIEW_WARBAND . '/' . $warband_nid);
  //return $node->title . ' added to your warband. Created node:' . $new_nid;

}

function warhammer_globals_draw_line($x1 = 10, $y1 = 15, $x2 = 1, $y2 = 5) {
//  module_load_include('inc', 'clone', 'clone.pages');
//  $new_nid = clone_node_save(1);
//  echo $new_nid;
//  die;
//  print "Drawing line from $x1,$y1 to $x2,$y2<br>";
  $playfield = array();
  
  $dy = $y2 - $y1;
  $dx = $x2 - $x1;
  if ($dy < 0) { $dy = -$dy;  $stepy = -1; } else { $stepy = 1; }
  if ($dx < 0) { $dx = -$dx;  $stepx = -1; } else { $stepx = 1; }
  $dy <<= 1; // dy is now 2*dy
  $dx <<= 1; // dx is now 2*dx
  
  $playfield[$x1][$y1] = 'X';
  if ($dx > $dy) {
    $fraction = $dy - ($dx >> 1); // same as 2*dy - dx
    while ($x1 != $x2) {
      if ($fraction >= 0) {
        $y1 += $stepy;
        $fraction -= $dx; // same as fraction -= 2*dx
      }
      $x1 += $stepx;
      $fraction += $dy; // same as fraction -= 2*dy
      $playfield[$x1][$y1] = 'X';
    }
  } 
  else {
    $fraction = $dx - ($dy >> 1);
    while ($y1 != $y2) {
      if ($fraction >= 0) {
        $x1 += $stepx;
        $fraction -= $dy;
      }
      $y1 += $stepy;
      $fraction += $dx;
      $playfield[$x1][$y1] = 'X';
    }
  }
  
  for ($y = 0; $y<=47; $y++) {
    for ($x = 0; $x<=47; $x++) {
      $output .= theme('render_playfield', ($playfield[$x][$y] == 'X' ? '&nbsp;' : '&nbsp;'), 
        $playfield[$x][$y] == 'X' ? 'map-cell-fill' : 'map-cell');
      if ($x == 47) $output .= '<div style="clear: both;"></div>';   
    }
  }
  return $output;
}

function theme_render_playfield($field, $style) {
  //foreach($field as $tile) {
    $output .= '<div class="' . $style . '">' . $field . '</div>';
  //}
  return $output;
}

function warhammer_globals_create_warband_form($form_state) {
  $form['title'] = array(
     '#type' => 'textfield',
     '#title' => t('Warband title'),
     '#size' => 50,
     '#maxlength' => 255,
     '#description' => t('Enter the name for your warband'),
   );
   
   $data = unserialize(db_result(db_query("SELECT global_settings FROM {content_node_field} WHERE field_name='field_warband'")));
   $values = explode("\r", $data['allowed_values']);
   foreach($values as $value) {
     $option = explode("|", $value);
     $options[(int)$option[0]] = $option[1];
   }
   
   $form['warband_type'] = array(
     '#type' => 'select',
     '#title' => t('Select a warband type'),
     '#options' => $options,
     '#description' => t('Warband type.'),
   );
      
   $form['submit'] = array('#type' => 'submit', '#value' => t('Save'));
     
  return $form;
}

function warhammer_globals_create_warband_form_submit($form, &$form_state) {

  global $user;
  
  $node->nid = NULL;
  $node->vid = NULL;
  $node->type = 'warband';
  $node->name = $user->name;
  $node->uid = $user->uid;
  $node->created = NULL;
  $node->menu = NULL;
  $node->book['mlid'] = NULL;
  $node->path = NULL;
  $node->files = array();
  $node->title = $form_state['values']['title'];
  $node->field_warband[0]['value'] = $form_state['values']['warband_type'];
  
  node_save($node);
  
  drupal_goto('warband/wizard/' . WARBAND_ADD_UNIT . '/' . $node->nid);
}

function warhammer_globals_warband_wizard($step) {
  global $user;

  if (is_numeric(arg(3))) {
    $nid = arg(3);
    $node = node_load($nid);
  }
  
  switch ($step) {
    case WARBAND_CREATE_NODE:
    
      $output .= drupal_get_form('warhammer_globals_create_warband_form');
      break;
      
    case WARBAND_ADD_UNIT:
      $warband_type = $node->field_warband[0]['value'];
      $output = warhammer_globals_show_units($warband_type, $nid);
      break;
      
    case WARBAND_VIEW_WARBAND:
      $output .= warhammer_globals_show_warband($nid);
      $output .= l('Choose units', 'warband/wizard/' . WARBAND_ADD_UNIT . '/' . $nid) . '<br />';
      $output .= l('Finish', 'warband/wizard/' . WARBAND_FINISH . '/' . $nid);
      break;
      
    case WARBAND_FINISH:
      $output = "DONE";
      break;
  }
  
  return $output;
}

function warhammer_globals_show_units($warband_type, $warband_nid) {
  
  $chartype = array ('1' => 'Leader', '2' => 'Heroes', '3' => 'Henchmen');
  
  $sql ="SELECT node.nid AS nid,
           wu.field_countmin_value AS field_countmin_value,
           node.type AS node_type,
           node.vid AS node_vid,
           wu.field_countmax_value AS field_countmax_value,
           node.title AS node_title,
           wu.field_chartype_value AS field_chartype_value,
           wu.field_cost_value AS field_cost_value,
           node_revisions.body AS node_revisions_body,
           node_revisions.format AS node_revisions_format,
           wu.field_movement_value AS field_movement_value,
           wu.field_weaponskill_value AS field_weaponskill_value,
           wu.field_ballisticskill_value AS field_ballisticskill_value,
           wu.field_strength_value AS field_strength_value,
           wu.field_toughness_value AS field_toughness_value,
           wu.field_wounds_value AS field_wounds_value,
           wu.field_initiative_value AS field_initiative_value,
           wu.field_attacks_value AS field_attacks_value,
           wu.field_leadership_value AS field_leadership_value,
           wu.field_weapons_armour_value AS field_weapons_armour_value,
           wu.field_specialrules_value AS field_specialrules_value
         FROM node node 
         INNER JOIN content_field_warband fw ON node.vid = fw.vid
         LEFT JOIN content_type_warband_unit wu ON node.vid = wu.vid
         LEFT JOIN node_revisions node_revisions ON node.vid = node_revisions.vid
         WHERE (node.type in ('warband_unit')) AND (fw.field_warband_value = %d)";
  
  $res = db_query($sql, $warband_type);

  while($rs = db_fetch_object($res)) {
    $output .= '<h1></h1>';
    
    $header = array ('M', 'WS', 'BS', 'S', 'T', 'W', 'I', 'A', 'Ld');
    $rows[0] = array($rs->field_movement_value,
      $rs->field_weaponskill_value,
      $rs->field_ballisticskill_value,
      $rs->field_strength_value,
      $rs->field_toughness_value,
      $rs->field_wounds_value,
      $rs->field_initiative_value,
      $rs->field_attacks_value,
      $rs->field_leadership_value
    );
    $output .= '<h1>' . $rs->node_title . '</h1>';
    $output .= '<strong>' . $rs->field_cost_value . ' gold crowns to hire</strong>';
    $output .= '<p>' . $rs->node_revisions_body . '</p>';
    $output .= '<p><strong>' . $chartype[$rs->field_chartype_value] . '</strong></p>';
    $output .= theme('table', $header, $rows);
    $output .= '<p><strong>Weapons/Armour:</strong><br />' . $rs->field_weapons_armour_value . '</p>'; 
    $output .= '<p><strong>Special rules:</strong><br />' . $rs->field_specialrules_value . '</p>'; 
    $output .= l('Add unit...', 'warband/add/' . $rs->nid . '/' . $warband_nid);
  }
  
  return $output;
}

function warhammer_globals_show_warband($nid) {
  $node = node_load($nid);
  
  foreach($node->field_wuref as $key => $value) {
    $node_unit = node_load($value['nid']);
    $output .= $node_unit->title . '<br/>';
  }
  return $output;
  return print_r($node, true);
}

function warhammer_globals_mywarbands() {
  global $user;
  $res = db_query("SELECT * FROM {node} WHERE uid = %d AND type = 'warband'", $user->uid);
 
  while ($rs = db_fetch_object($res)) {
    $output .= l($rs->title, 'warband/wizard/2/' . $rs->nid) . '<br />';
  }
  
  if(!db_affected_rows()) {
    $output = 'No warbands defined';
  }
  
  return $output;
}